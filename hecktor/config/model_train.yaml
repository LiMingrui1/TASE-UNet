# paths:
path_to_data: 'D:\HECKTOR\DATA_250\train_and_val'  # directory with images
path_to_pkl: 'D:\LMR\lmr\hecktor-main\hecktor\src\data\splits\HECKTOR_split.pkl'  # pkl file with train / val splits
path_to_save_dir: 'D:\HECKTOR\model_result\contrast_exper\ResSimAM_UNet'  # all results (weights, learning curves, etc) will be saved here

# train settings:
train_batch_size: 1
val_batch_size: 1
num_workers: 0  # for example, use a number of CPU cores

lr: 1e-3  # initial learning rate
n_epochs: 300  # number of training epochs (300 was used in the paper)
n_cls: 2  # number of classes to predict (background and tumor)
in_channels: 2  # number of input modalities
n_filters: 24  # number of filters after the input (24 was used in the paper)
reduction: 2  # parameter controls the size of the bottleneck in SENorm layers

T_0: 20  # parameter for 'torch.optim.lr_scheduler.CosineAnnealingWarmRestarts'
eta_min: 1e-6  # parameter for 'torch.optim.lr_scheduler.CosineAnnealingWarmRestarts'

# model:
baseline: True  # if `true`, U-Net will be used. Otherwise, the model described in the paper will be trained.
